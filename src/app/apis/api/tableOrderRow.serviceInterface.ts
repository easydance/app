/**
 * 
 * Your api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AddressControllerCountDefaultResponse } from '../model/models';
import { CreateTableOrderRowRequestDto } from '../model/models';
import { PatchTableOrderRowRequestDto } from '../model/models';
import { TableOrderRowControllerCreateDefaultResponse } from '../model/models';
import { TableOrderRowControllerFindAllDefaultResponse } from '../model/models';
import { TableOrderRowControllerFindOneDefaultResponse } from '../model/models';
import { TableOrderRowControllerReplaceDefaultResponse } from '../model/models';
import { TableOrderRowControllerUpdateDefaultResponse } from '../model/models';
import { UpdateTableOrderRowRequestDto } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface TableOrderRowServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param id 
     */
    _delete(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param page 
     * @param pageSize 
     * @param filters 
     * @param sorting 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    count(page?: number, pageSize?: number, filters?: string, sorting?: string, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<AddressControllerCountDefaultResponse>;

    /**
     * 
     * 
     * @param createTableOrderRowRequestDto 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    create(createTableOrderRowRequestDto: CreateTableOrderRowRequestDto, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<TableOrderRowControllerCreateDefaultResponse>;

    /**
     * 
     * 
     * @param page 
     * @param pageSize 
     * @param filters 
     * @param sorting 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    findAll(page?: number, pageSize?: number, filters?: string, sorting?: string, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<TableOrderRowControllerFindAllDefaultResponse>;

    /**
     * 
     * 
     * @param id 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    findOne(id: any, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<TableOrderRowControllerFindOneDefaultResponse>;

    /**
     * 
     * 
     * @param id 
     * @param updateTableOrderRowRequestDto 
     */
    replace(id: number, updateTableOrderRowRequestDto: UpdateTableOrderRowRequestDto, extraHttpRequestParams?: any): Observable<TableOrderRowControllerReplaceDefaultResponse>;

    /**
     * 
     * 
     * @param id 
     * @param patchTableOrderRowRequestDto 
     */
    update(id: number, patchTableOrderRowRequestDto: PatchTableOrderRowRequestDto, extraHttpRequestParams?: any): Observable<TableOrderRowControllerUpdateDefaultResponse>;

}
