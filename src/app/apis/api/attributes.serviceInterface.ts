/**
 * 
 * Your api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AddressControllerCountDefaultResponse } from '../model/models';
import { AttributesControllerCreateDefaultResponse } from '../model/models';
import { AttributesControllerFindAllDefaultResponse } from '../model/models';
import { AttributesControllerFindOneDefaultResponse } from '../model/models';
import { AttributesControllerGetVersionDefaultResponse } from '../model/models';
import { AttributesControllerReplaceDefaultResponse } from '../model/models';
import { AttributesControllerUpdateDefaultResponse } from '../model/models';
import { CreateAttributesRequestDto } from '../model/models';
import { PatchAttributesRequestDto } from '../model/models';
import { UpdateAttributesRequestDto } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface AttributesServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param id 
     */
    _delete(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param page 
     * @param pageSize 
     * @param filters 
     * @param sorting 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    count(page?: number, pageSize?: number, filters?: string, sorting?: string, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<AddressControllerCountDefaultResponse>;

    /**
     * 
     * 
     * @param createAttributesRequestDto 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    create(createAttributesRequestDto: CreateAttributesRequestDto, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<AttributesControllerCreateDefaultResponse>;

    /**
     * 
     * 
     * @param page 
     * @param pageSize 
     * @param filters 
     * @param sorting 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    findAll(page?: number, pageSize?: number, filters?: string, sorting?: string, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<AttributesControllerFindAllDefaultResponse>;

    /**
     * 
     * 
     * @param id 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    findOne(id: any, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<AttributesControllerFindOneDefaultResponse>;

    /**
     * 
     * 
     */
    getVersion(extraHttpRequestParams?: any): Observable<AttributesControllerGetVersionDefaultResponse>;

    /**
     * 
     * 
     * @param id 
     * @param updateAttributesRequestDto 
     */
    replace(id: number, updateAttributesRequestDto: UpdateAttributesRequestDto, extraHttpRequestParams?: any): Observable<AttributesControllerReplaceDefaultResponse>;

    /**
     * 
     * 
     * @param id 
     */
    restore(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param aPIKEY 
     */
    setVersion(aPIKEY: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param id 
     * @param patchAttributesRequestDto 
     */
    update(id: number, patchAttributesRequestDto: PatchAttributesRequestDto, extraHttpRequestParams?: any): Observable<AttributesControllerUpdateDefaultResponse>;

}
