/**
 * 
 * Your api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AddressControllerCountDefaultResponse } from '../model/models';
import { CreateProductCategoryRequestDto } from '../model/models';
import { MostSoldDto } from '../model/models';
import { PatchProductCategoryRequestDto } from '../model/models';
import { ProductCategoryControllerCreateDefaultResponse } from '../model/models';
import { ProductCategoryControllerFindAllDefaultResponse } from '../model/models';
import { ProductCategoryControllerFindOneDefaultResponse } from '../model/models';
import { ProductCategoryControllerReplaceDefaultResponse } from '../model/models';
import { ProductCategoryControllerUpdateDefaultResponse } from '../model/models';
import { UpdateProductCategoryRequestDto } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface ProductCategoryServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param id 
     */
    _delete(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param page 
     * @param pageSize 
     * @param filters 
     * @param sorting 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    count(page?: number, pageSize?: number, filters?: string, sorting?: string, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<AddressControllerCountDefaultResponse>;

    /**
     * 
     * 
     * @param createProductCategoryRequestDto 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    create(createProductCategoryRequestDto: CreateProductCategoryRequestDto, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<ProductCategoryControllerCreateDefaultResponse>;

    /**
     * 
     * 
     * @param page 
     * @param pageSize 
     * @param filters 
     * @param sorting 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    findAll(page?: number, pageSize?: number, filters?: string, sorting?: string, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<ProductCategoryControllerFindAllDefaultResponse>;

    /**
     * 
     * 
     * @param id 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    findOne(id: any, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<ProductCategoryControllerFindOneDefaultResponse>;

    /**
     * 
     * 
     * @param from 
     * @param to 
     * @param sortBy 
     * @param sortType 
     * @param skip 
     * @param take 
     * @param club 
     */
    mostSold(from: string, to: string, sortBy: 'amount' | 'count', sortType: 'ASC' | 'DESC', skip: number, take: number, club?: number, extraHttpRequestParams?: any): Observable<MostSoldDto>;

    /**
     * 
     * 
     * @param id 
     * @param updateProductCategoryRequestDto 
     */
    replace(id: number, updateProductCategoryRequestDto: UpdateProductCategoryRequestDto, extraHttpRequestParams?: any): Observable<ProductCategoryControllerReplaceDefaultResponse>;

    /**
     * 
     * 
     * @param id 
     */
    restore(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param id 
     * @param patchProductCategoryRequestDto 
     */
    update(id: number, patchProductCategoryRequestDto: PatchProductCategoryRequestDto, extraHttpRequestParams?: any): Observable<ProductCategoryControllerUpdateDefaultResponse>;

}
