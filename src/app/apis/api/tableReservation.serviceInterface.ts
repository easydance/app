/**
 * 
 * Your api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AddressControllerCountDefaultResponse } from '../model/models';
import { CreateTableReservationRequestDto } from '../model/models';
import { PatchTableReservationRequestDto } from '../model/models';
import { TableReservationControllerCreateDefaultResponse } from '../model/models';
import { TableReservationControllerFindAllDefaultResponse } from '../model/models';
import { TableReservationControllerFindOneDefaultResponse } from '../model/models';
import { TableReservationControllerReplaceDefaultResponse } from '../model/models';
import { TableReservationControllerUpdateDefaultResponse } from '../model/models';
import { UpdateTableReservationRequestDto } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface TableReservationServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param id 
     */
    _delete(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param page 
     * @param pageSize 
     * @param filters 
     * @param sorting 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    count(page?: number, pageSize?: number, filters?: string, sorting?: string, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<AddressControllerCountDefaultResponse>;

    /**
     * 
     * 
     * @param createTableReservationRequestDto 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    create(createTableReservationRequestDto: CreateTableReservationRequestDto, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<TableReservationControllerCreateDefaultResponse>;

    /**
     * 
     * 
     * @param page 
     * @param pageSize 
     * @param filters 
     * @param sorting 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    findAll(page?: number, pageSize?: number, filters?: string, sorting?: string, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<TableReservationControllerFindAllDefaultResponse>;

    /**
     * 
     * 
     * @param id 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    findOne(id: any, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<TableReservationControllerFindOneDefaultResponse>;

    /**
     * 
     * 
     * @param id 
     * @param updateTableReservationRequestDto 
     */
    replace(id: number, updateTableReservationRequestDto: UpdateTableReservationRequestDto, extraHttpRequestParams?: any): Observable<TableReservationControllerReplaceDefaultResponse>;

    /**
     * 
     * 
     * @param id 
     */
    restore(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param id 
     * @param patchTableReservationRequestDto 
     */
    update(id: number, patchTableReservationRequestDto: PatchTableReservationRequestDto, extraHttpRequestParams?: any): Observable<TableReservationControllerUpdateDefaultResponse>;

}
