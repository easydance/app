/**
 * 
 * Your api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AddressControllerCountDefaultResponse } from '../model/models';
import { CreateUserToUserFollowerRequestDto } from '../model/models';
import { PatchUserToUserFollowerRequestDto } from '../model/models';
import { UpdateUserToUserFollowerRequestDto } from '../model/models';
import { UserToUserFollowerControllerCreateDefaultResponse } from '../model/models';
import { UserToUserFollowerControllerFindAllDefaultResponse } from '../model/models';
import { UserToUserFollowerControllerFindOneDefaultResponse } from '../model/models';
import { UserToUserFollowerControllerReplaceDefaultResponse } from '../model/models';
import { UserToUserFollowerControllerUpdateDefaultResponse } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface UserToUserFollowerServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param id 
     */
    _delete(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param page 
     * @param pageSize 
     * @param filters 
     * @param sorting 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    count(page?: number, pageSize?: number, filters?: string, sorting?: string, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<AddressControllerCountDefaultResponse>;

    /**
     * 
     * 
     * @param createUserToUserFollowerRequestDto 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    create(createUserToUserFollowerRequestDto: CreateUserToUserFollowerRequestDto, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<UserToUserFollowerControllerCreateDefaultResponse>;

    /**
     * 
     * 
     * @param page 
     * @param pageSize 
     * @param filters 
     * @param sorting 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    findAll(page?: number, pageSize?: number, filters?: string, sorting?: string, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<UserToUserFollowerControllerFindAllDefaultResponse>;

    /**
     * 
     * 
     * @param id 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    findOne(id: any, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<UserToUserFollowerControllerFindOneDefaultResponse>;

    /**
     * 
     * 
     * @param id 
     * @param updateUserToUserFollowerRequestDto 
     */
    replace(id: number, updateUserToUserFollowerRequestDto: UpdateUserToUserFollowerRequestDto, extraHttpRequestParams?: any): Observable<UserToUserFollowerControllerReplaceDefaultResponse>;

    /**
     * 
     * 
     * @param id 
     * @param patchUserToUserFollowerRequestDto 
     */
    update(id: number, patchUserToUserFollowerRequestDto: PatchUserToUserFollowerRequestDto, extraHttpRequestParams?: any): Observable<UserToUserFollowerControllerUpdateDefaultResponse>;

}
