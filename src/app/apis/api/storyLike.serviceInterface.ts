/**
 * 
 * Your api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AddressControllerCountDefaultResponse } from '../model/models';
import { CreateStoryLikeRequestDto } from '../model/models';
import { PatchStoryLikeRequestDto } from '../model/models';
import { StoryLikeControllerCreateDefaultResponse } from '../model/models';
import { StoryLikeControllerFindAllDefaultResponse } from '../model/models';
import { StoryLikeControllerFindOneDefaultResponse } from '../model/models';
import { StoryLikeControllerReplaceDefaultResponse } from '../model/models';
import { StoryLikeControllerUpdateDefaultResponse } from '../model/models';
import { UpdateStoryLikeRequestDto } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface StoryLikeServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param id 
     */
    _delete(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param page 
     * @param pageSize 
     * @param filters 
     * @param sorting 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    count(page?: number, pageSize?: number, filters?: string, sorting?: string, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<AddressControllerCountDefaultResponse>;

    /**
     * 
     * 
     * @param createStoryLikeRequestDto 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    create(createStoryLikeRequestDto: CreateStoryLikeRequestDto, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<StoryLikeControllerCreateDefaultResponse>;

    /**
     * 
     * 
     * @param page 
     * @param pageSize 
     * @param filters 
     * @param sorting 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    findAll(page?: number, pageSize?: number, filters?: string, sorting?: string, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<StoryLikeControllerFindAllDefaultResponse>;

    /**
     * 
     * 
     * @param id 
     * @param fields 
     * @param includes 
     * @param deleted 
     */
    findOne(id: any, fields?: string, includes?: string, deleted?: string, extraHttpRequestParams?: any): Observable<StoryLikeControllerFindOneDefaultResponse>;

    /**
     * 
     * 
     * @param id 
     * @param updateStoryLikeRequestDto 
     */
    replace(id: number, updateStoryLikeRequestDto: UpdateStoryLikeRequestDto, extraHttpRequestParams?: any): Observable<StoryLikeControllerReplaceDefaultResponse>;

    /**
     * 
     * 
     * @param id 
     */
    restore(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param id 
     * @param patchStoryLikeRequestDto 
     */
    update(id: number, patchStoryLikeRequestDto: PatchStoryLikeRequestDto, extraHttpRequestParams?: any): Observable<StoryLikeControllerUpdateDefaultResponse>;

}
